The problem with this approach is that it has a lot of disadvantages:

- Code is duplicated across subclasses
- Runtime behavior changes are difficult.
- Hard to gain knowledge of all different ducks behavior.
- Changes can unintentionally affect other ducks

Using an Interface (IQuackable, IFlyable) to separate out the flying and quacking behaviours from the duck class is also not really an Option because
you would need to rewrite the code in every class that implements the interface.
Especially when there are more than one type of flying/quacking behavior